plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'guru.qa'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    assertJVersion = "3.23.1",
    slf4jVersion = "1.7.32"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    testImplementation(
            //client
            "io.rest-assured:rest-assured:5.3.0",
            //allure
            "io.qameta.allure:allure-rest-assured:2.21.0",
            //assert
            "org.assertj:assertj-core:$assertJVersion",
            //config
            "org.aeonbits.owner:owner:1.0.12",
            //json
            "com.fasterxml.jackson.core:jackson-databind:2.14.2",
            //JUnit
            "org.junit.jupiter:junit-jupiter-api:5.6.2",
            "org.junit.jupiter:junit-jupiter-engine:5.6.2",
            "org.junit.jupiter:junit-jupiter-params:5.6.2",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}


compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task lesson20_tests(type: Test) {
    useJUnitPlatform {
        includeTags("lesson20")
    }
}


/*
plugins {
    id 'java-library'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

def slf4jVersion = "1.7.32"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    testImplementation(
            //client
            "io.rest-assured:rest-assured:5.3.0",
            //config
            "org.aeonbits.owner:owner:1.0.12",
            //json
            "com.fasterxml.jackson.core:jackson-databind:2.11.2",
            //JUnit
            "org.junit.jupiter:junit-jupiter:5.9.0",
            //
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
    testImplementation 'org.projectlombok:lombok:1.18.22'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}*/
